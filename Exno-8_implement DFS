# Graph is represented as an adjacency list (dictionary)
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}

def dfs(graph, start, visited=None):
    if visited is None:
        visited = set()  # Initialize visited set
    
    # Mark the current node as visited
    visited.add(start)
    print(start, end=" ")

    # Recur for all the vertices adjacent to this vertex
    for neighbor in graph[start]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

# Example usage:
print("192324238-Hemanth Kumar")
print("DFS traversal starting from node 'A':")
dfs(graph, 'A')

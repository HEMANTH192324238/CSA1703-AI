import itertools
print("192324238-Hemanth Kumar")
def solve_cryptarithmetic():
    # Unique letters in the puzzle
    letters = 'SENDMORY'

    # Digits 0-9 (we will permute these)
    digits = range(10)

    # Try all permutations of digits assigned to letters
    for perm in itertools.permutations(digits, len(letters)):
        # Create a mapping of letter to digit
        mapping = dict(zip(letters, perm))

        # Skip if leading letters are zero
        if mapping['S'] == 0 or mapping['M'] == 0:
            continue

        # Convert SEND, MORE, MONEY to actual numbers
        send = 1000 * mapping['S'] + 100 * mapping['E'] + 10 * mapping['N'] + mapping['D']
        more = 1000 * mapping['M'] + 100 * mapping['O'] + 10 * mapping['R'] + mapping['E']
        money = 10000 * mapping['M'] + 1000 * mapping['O'] + 100 * mapping['N'] + 10 * mapping['E'] + mapping['Y']

        if send + more == money:
            print("Solution Found:")
            print(f"  SEND = {send}")
            print(f"  MORE = {more}")
            print(f" MONEY = {money}")
            print("Mapping:", mapping)
            return

    print("No solution found.")

# Run the program
solve_cryptarithmetic()
